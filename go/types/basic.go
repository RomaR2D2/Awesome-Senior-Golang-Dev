package types

import "fmt"

func main() {
	//string
	//Строки в Go являются неизменяемыми последовательностями байтов, представляющими символы в кодировке UTF-8.
	s := "hello world"
	fmt.Println(s)
	fmt.Println(len(s))
	fmt.Println(s[0]) // выведет байт, представляющий символ 'h'

	//rune - это псевдоним для типа int32, который представляет Юникод-символ.
	var r rune = '한'
	fmt.Println(r) // выведет Юникод-код символа '한'

	//byte - это псевдоним для типа uint8, который представляет один байт данных.
	var b byte = 0x41 // шестнадцатеричное представление символа 'A'
	fmt.Println(b)

	//int и uint представляют соответственно знаковые и беззнаковые целочисленные значения. Размер их зависит от архитектуры машины.
	var x int = 42
	var y uint = 42
	fmt.Println(x, y)

	//float32 и float64 представляют соответственно числа с плавающей точкой одинарной и двойной точности.
	var xx float32 = 3.14159
	var yy float64 = 3.14159
	fmt.Println(xx, yy)

	//Константы в Go определяются с помощью ключевого слова const и должны быть определены во время компиляции.
	const Pi = 3.14159
	fmt.Println(Pi)

	//Указатели в Go представляются символом *
	xxx := 42
	ptr := &xxx
	fmt.Println(*ptr) // выведет 42
	*ptr = 24
	fmt.Println(xxx) // выведет 24

}
