package functions

import "fmt"

//В Go функции являются объектами первого класса (first-class objects), что означает,
//что они могут быть использованы в качестве значений, передаваться в качестве аргументов другим функциям
//и возвращаться из функций.
//Например, вот функция apply, которая принимает функцию f и аргумент x, применяет функцию f к аргументу x
//и возвращает результат:
//Функция apply принимает функцию f с сигнатурой (int) int
//(т.е. функцию, которая принимает один аргумент типа int и возвращает значение типа int)
//и аргумент типа int. Функция apply затем применяет функцию f к аргументу x и возвращает результат.

func apply(f func(int) int, x int) int {
	return f(x)
}

//Также в Go функции могут быть назначены переменным и использоваться для создания других функций.
//Вот пример функции adder, которая принимает аргумент x и возвращает другую функцию, которая принимает аргумент y
//и возвращает сумму x и y:

func adder(x int) func(int) int {
	return func(y int) int { return x + y }
}

func main() {
	result := apply(func(x int) int { return x * 2 }, 5)
	fmt.Println(result)   // Выводит "10"
	add5 := adder(5)      // создаем функцию, которая будет складывать 5 и свой аргумент
	fmt.Println(add5(10)) // выводит "15"
	fmt.Println(add5(20)) // выводит "25"
}
